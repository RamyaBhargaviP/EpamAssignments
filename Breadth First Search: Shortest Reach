import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the bfs function below.
    static int[] bfs(int n, int m, int[][] edges, int s) {
        int Arr[]=new int[n-1];
        ArrayList<ArrayList<Integer>> al = new ArrayList<ArrayList<Integer>>();
        for(int i=0;i<=n;i++)
            al.add(i,new ArrayList<Integer>());
        for(int i=0;i<m;i++)
        {
            int src=edges[i][0];
            int des=edges[i][1];
            al.get(src).add(des);
            al.get(des).add(src);
        }
        Queue<Integer> que =new LinkedList<Integer>();
        boolean vis[]=new boolean[n+1];
        que.add(s);
        que.add(-1);
        int c=0;
        vis[s]=true;
        while(que.size()>1)
        {
            int x=que.poll();
            if(x==-1){
                que.add(-1);
                c=c+6;
            }
            else
            {
                if(x>s)
                    Arr[x-2]=c;
                else
                    Arr[x-1]=c;
                Iterator<Integer> itr=al.get(x).listIterator();
                while(itr.hasNext())
                {
                    int j=itr.next();
                    if(!vis[j])
                    {
                        vis[j]=true;
                        que.add(j);
                    }
                }
            }
        }
        for(int i=0;i<n-1;i++)
        {
            if(Arr[i]==0)
                Arr[i]=-1;
        }
        return Arr;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String[] nm = scanner.nextLine().split(" ");

            int n = Integer.parseInt(nm[0]);

            int m = Integer.parseInt(nm[1]);

            int[][] edges = new int[m][2];

            for (int i = 0; i < m; i++) {
                String[] edgesRowItems = scanner.nextLine().split(" ");
                scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

                for (int j = 0; j < 2; j++) {
                    int edgesItem = Integer.parseInt(edgesRowItems[j]);
                    edges[i][j] = edgesItem;
                }
            }

            int s = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[] result = bfs(n, m, edges, s);

            for (int i = 0; i < result.length; i++) {
                bufferedWriter.write(String.valueOf(result[i]));

                if (i != result.length - 1) {
                    bufferedWriter.write(" ");
                }
            }

            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
